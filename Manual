Requirements: 
     ● Perl (5+)
     ● Samtools
     ● Bedtools (2.26.0+)
     ● R
     ● STAR

Installation: Download the JUM package to a local folder of choice (for example, /home/eagle/) and unpack.

Note: 1) JUM uses RNA-seq reads mapped to splice junctions to construct statistical models and quantify AS changes, 
therefore the depth of RNA-seq datasets can affect how many alternative splicing events will be found. We have 
successfully tested Drosophila samples of as low as ~20M reads and human samples of as low as ~35M reads.
2) JUM uses biological replicates to build statistical models. Ideally for each condition the user will have >= 2 replicates. 
There is a workaround if the user only has one replicate for each biological condition. Plese contact the author if this is the case. 

Manual: 
1. Perform the first round STAR mapping of RNA-seq reads as instructed in the STAR manual.

2. Create a working folder, (for example, /home/eagle/JUMwork) and copy STAR output with suffix “Aligned.out.sam” and 
“SJ.out.tab” from all samples to the folder. For example, suppose the user has IndexA (control), IndexB (control), IndexC (treatment) 
and IndexD (treatment), then the user should copy the following STAR output files to /home/eagle/JUMwork.

IndexAAligned.out.sam
IndexASJ.out.tab

IndexBAligned.out.sam
IndexBSJ.out.tab

IndexCAligned.out.sam
IndexCSJ.out.tab

IndexDAligned.out.sam
IndexDSJ.out.tab

3. Run JUM_1.sh in the JUM package:
bash /home/eagle/JUM/JUM_1.sh

This step will create a file called: combined_SJ_out_tab_unannotated_for_2nd_pass_genome_generation.txt

4. Delete all Aligned.out.sam and SJ.out.tab files from this folder (to avoid confusion with second round STAR mapping results).

5. Perform second round of STAR mapping of RNA-seq reads. First make a STAR genome index for the second round of STAR mapping by 
supplying combined_SJ_out_tab_unannotated_for_2nd_pass_genome_generation.txt as the --sjdbFileChrStartEnd parameter. Next, run STAR 
for all your RNA-seq samples using the resulted STAR genome index.

6. Copy the resulted second round STAR output with suffix “Aligned.out.sam” and “SJ.out.tab” to the working folder (i.e. /home/eagle/JUMwork).

7. Use samtools and bedtools to transform all Aligned.out.sam files (use the exact naming as below):
   samtools view -bS IndexAAligned.out.sam > IndexAAligned.out.bam
   samtools sort IndexAAligned.out.bam > IndexAAligned.out_sorted
   bedtools genomecov -ibam IndexAAligned.out_sorted.bam -bga -split > IndexAAligned.out_coverage.bed
   do this for all your samples.
    
8. Run JUM_2.sh (this step may take up to several hours depending on number of samples to run):
   bash /home/eagle/JUM/JUM_2.sh #directory #read_threshold_1 #read_threshold_2 #read_length
   (the command needs four input parameters: 
        parameter a. #directory: path of the downloaded JUM package.
        parameter b. #read_number_threshold_for_junction: JUM will only consider junctions that have more than this # of unique reads mapped to it 
                     in all samples as valid junctions;
        parameter c. #read_number_threshod_for_exon_intron_boundary: JUM will only consider retained introns that have more than this # of unique 
                     reads mapped to the upstream exon-intron and downstream intron-exon boundaries as valid potential retained introns;
        parameter d. #read_length: the length of the RNA-seq reads
    Example: bash /home/eagle/JUM/JUM_2.sh /home/eagle/JUM 5 2 100
    JUM_2 outputs results into a new folder called JUM_diff/
9. Run the R script in the JUM package, with a user-provided experiment design file (txt format) for differential AS analysis. 
   Rscript /home/eagle/JUM/R_script_JUM.R experiment_design.txt > outputFile.Rout 2> errorFile.Rout
      An example experiment_design.txt file is included in the package for the example below: suppose the user has IndexA, IndexB, IndexC and IndexD samples. 
      IndexA and IndexB are drug treated biological replicates and IndexC and IndexD are control biological replicates. JUM_2.sh then outputs the following files 
      IndexA_2nd_combined_count.txt, IndexB_2nd_combined_count.txt, IndexC_2nd_combined_count.txt, and IndexD_2nd_combined_count.txt. Note, it is important to keep 
      the samples names and condition names in the same alphabetic order in the experiment design file.
      R_script_JUM.R will output a file AS_differential.txt
10. Run JUM_3.sh:
        bash /home/eagle/JUM/JUM_3.sh #directory #pvalue|adjusted_pvalue #threshold #number_of_samples #<number of control_samples|treated_samples>
         parameter a. #directory: path of the downloaded JUM package
         parameter b. #pvalue|adjusted_pvalue: statistical standard to use as cut-off. Choose between pvalue or padj (multi-test adjusted pvalue).
         parameter c. #threshold: cutoff value for pvalue or padj (I.e. 0.05, 0.01, …)
         parameter d. #number_of_samples: total number of RNA-seq samples
         Parameter e. #the number of control samples or the number of treated samples, whichever is smaller
       For example, suppose the user has a total of 4 samples (two controls and two treated), and wish to use pvalue 0.05 as cut off, then run JUM_3.sh as follows:
        bash /home/eagle/JUM/JUM_3.sh /home/eagle/JUM pvalue 0.05 4 2


JUM_3.sh output a folder: FINAL_JUM_OUTPUT with the following files:
AS_differential_JUM_output_A3SS_events_pvalue_0.05.txt
AS_differential_JUM_output_A5SS_events_pvalue_0.05.txt
AS_differential_JUM_output_cassette_exon_events_pvalue_0.05.txt
AS_differential_JUM_output_intron_retention_pvalue_0.05.txt
AS_differential_JUM_output_mixed_events_pvalue_0.05.txt
AS_differential_JUM_output_MXE_events_pvalue_0.05.txt
Valid_total_A3SS_event.txt
Valid_total_A5SS_event.txt
Valid_total_cassette_exon_event.txt
total_intron_retention_event.txt
total_mixed_event.txt
Valid_total_MXE_list.txt
cassette_exon_coordinate.bed
MXE_coordinate.bed

AS_differential_JUM_output_* files record AS events that are significantly changed upon a treatment (or different tissue type etc.) in each AS event pattern category.
Valid_total_* event.txt and total_*_event.txt record the IDs of total AS events in each category found by JUM in this tissue/cell sample.
cassette_exon_coordinate/MXE_coordinate.bed record the coordinates of the alternatively spliced cassette exon and mutually exclusive exons in each of the AS event.
